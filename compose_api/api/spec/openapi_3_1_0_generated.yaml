openapi: 3.1.0
info:
  title: compose-api
  version: 0.0.1
paths:
  /core/simulation/run:
    post:
      tags:
      - Simulations
      summary: Run a simulation
      operationId: run-simulation
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_run-simulation'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimulationExperiment'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /core/simulation/run/status:
    get:
      tags:
      - Simulations
      summary: Get the simulation status record by its ID
      operationId: get-simulation-status
      parameters:
      - name: simulation_id
        in: query
        required: true
        schema:
          type: integer
          title: Simulation Id
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HpcRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /core/simulation/run/results/file:
    get:
      tags:
      - Simulations
      summary: Get simulation results as a zip file
      operationId: get-simulation-results-file
      parameters:
      - name: experiment_id
        in: query
        required: true
        schema:
          type: string
          title: Experiment Id
      responses:
        '200':
          description: Simulation result zip file
          content:
            application/octet-stream:
              schema:
                format: binary
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /health:
    get:
      tags:
      - BIOSIM API
      summary: Check Health
      operationId: check_health_health_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Check Health Health Get
  /version:
    get:
      tags:
      - BIOSIM API
      summary: Get Version
      operationId: get_version_version_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: string
                title: Response Get Version Version Get
components:
  schemas:
    Body_run-simulation:
      properties:
        uploaded_file:
          type: string
          format: binary
          title: Uploaded File
      type: object
      required:
      - uploaded_file
      title: Body_run-simulation
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    HpcRun:
      properties:
        database_id:
          type: integer
          title: Database Id
        slurmjobid:
          type: integer
          title: Slurmjobid
        correlation_id:
          type: string
          title: Correlation Id
        job_type:
          $ref: '#/components/schemas/JobType'
        ref_id:
          type: integer
          title: Ref Id
        status:
          anyOf:
          - $ref: '#/components/schemas/JobStatus'
          - type: 'null'
        start_time:
          anyOf:
          - type: string
          - type: 'null'
          title: Start Time
        end_time:
          anyOf:
          - type: string
          - type: 'null'
          title: End Time
        error_message:
          anyOf:
          - type: string
          - type: 'null'
          title: Error Message
      type: object
      required:
      - database_id
      - slurmjobid
      - correlation_id
      - job_type
      - ref_id
      title: HpcRun
    JobStatus:
      type: string
      enum:
      - waiting
      - queued
      - running
      - completed
      - failed
      title: JobStatus
    JobType:
      type: string
      enum:
      - simulation
      title: JobType
    Simulation:
      properties:
        database_id:
          type: integer
          title: Database Id
        sim_request:
          $ref: '#/components/schemas/SimulationRequest'
        slurmjob_id:
          anyOf:
          - type: integer
          - type: 'null'
          title: Slurmjob Id
      type: object
      required:
      - database_id
      - sim_request
      title: Simulation
      description: "Everything required to execute the simulation and produce the\
        \ same results.\nInput file contains all the files required to run the simulation\
        \ (process-bigraph.json, sbml, etc...).\npb_cache_hash is the hash affiliated\
        \ with the specific process bi-graph and it's dependencies.\nArgs:\n    database_id:\
        \ SimulatorVersion\n    sim_request: SimulationRequest\n    slurmjob_id: int\
        \ | None"
    SimulationExperiment:
      properties:
        experiment_id:
          type: string
          title: Experiment Id
        simulation:
          $ref: '#/components/schemas/Simulation'
        last_updated:
          type: string
          title: Last Updated
        metadata:
          additionalProperties:
            type: string
          type: object
          title: Metadata
      type: object
      required:
      - experiment_id
      - simulation
      title: SimulationExperiment
    SimulationRequest:
      properties:
        omex_archive:
          anyOf:
          - type: string
            format: path
          - type: 'null'
          title: Omex Archive
      type: object
      title: SimulationRequest
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
            - type: string
            - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
      - loc
      - msg
      - type
      title: ValidationError
